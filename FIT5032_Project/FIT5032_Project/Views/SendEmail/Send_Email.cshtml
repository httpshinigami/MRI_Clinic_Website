@model FIT5032_Project.Models.SendEmailViewModel

@{
    ViewBag.Title = "Send Email";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Send_Email", "SendEmail", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <!-- TinyMCE CDN -->
    <script src="https://cdn.tiny.cloud/1/yevhf8yq8ltsgby02zm13u0drh93wm6d2mignqe1peg0qrak/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>

    <script>
        tinymce.init({
            selector: 'textarea#rich-text-editor',
            menubar: false,
            plugins: 'lists advlist',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl'
        });
    </script>

    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.6.0/umd/popper.min.js" integrity="sha512-BmM0/BQlqh02wuK5Gz9yrbe7VyIVwOzD1o40yi1IsTjriX/NGF37NyXHfmFzIlMmoSIBXgqDiG1VNU6kB5dBbA==" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>

    <!-- Display success messages if available -->
    if (ViewBag.Result != null)
    {
        <div class="alert alert-info">@ViewBag.Result</div>
    }

    <div class="form-horizontal">
        <h4>Send Email</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ToEmail, "Select Users:", new { @class = "control-label" })

            <!-- Only render ListBox if ViewBag.UserList is not null -->
            @if (ViewBag.UserList != null)
            {
                @Html.ListBoxFor(model => model.ToEmail, (MultiSelectList)ViewBag.UserList, new { @class = "form-control", id = "DoctorList", multiple = "multiple" })
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Contents, new { @class = "form-control", @id = "rich-text-editor" })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            @Html.Label("Attachment", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Attachment" /> 
            </div>
        </div>

        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send" class="btn btn-babi" />
            </div>
        </div>
    </div>

    if (ViewBag.UploadResult != null)
    {
        <div class="alert alert-info">@ViewBag.UploadResult</div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
